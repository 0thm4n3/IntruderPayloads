
ENUMERATION

- OPERATING SYSTEM 
- WEB SERVER
- DATABASE SERVERS
- PROGRAMMING LANGUAGES
- PLUGINS/VERSIONS
- OPEN PORTS
- USERNAMES
- SERVICES
- WEB SPIDERING
- GOOGLE HACKING


ATTACKS

HTTP SPLITTING
HTTP TRACE/TRACK
STORED/REFLECTED XSS
SQL INJECTION
BUFFER OVERFLOWS
WEAK COOKIES
X-FRAME-HEADERS MISSING
COMMAND INJECTION
AUTHENTICATION BYPASS
SERVER SOFTWARE VULNERABILITIES
DIRECTORY TRAVERSAL
DIRECTORY BRUTE FORCE
USER/PASS BRUTE FORCE
XML EXTERNAL ENTITY
WEB/FILE SPIDER 
DOM INJECTION
JSON INJECTION
AJAX INJECTION
CROSS-SITE REQUEST FORGERY
OSINT GATHERING
GOOGLE HACKING
USERNAME/PASSWORD ENUMERATION
SENSITIVE DATA
WEAK ENCRYPTION
REFLECTED FILE DOWNLOAD (JSON)
SESSION FIXATION - Login from multiple sessions and browsers and play with cookies and see what data is still available, etc.
PRIVILEGE ESCALATION - See an ID for another user in a POST request? Can it be changed to another ID to update that record?
KNOWN WEB VULNERABILITIES - ShellShock, MS15-031, etc... 


VECTORS


PUT/POST REQUESTS/FORMS
GET REQUESTS WITH PARAMETERS
GET URI STRUCTURE
COOKIE TESTING
HEADER VALUE TESTING
REST INJECTION
REFERER INJECTION
USER-AGENT INJECTION
HOST HEADER INJECTION


LOW HANGING FRUIT

LACK OF SPF FILTER RECORDS (EMAIL SPOOFING)
AUTO-COMPLETE ENABLED ON PASSWORD FIELDS
HTTP ENABLED
SESSION ID OR LOGIN SENT OVER GET OR HTTP
INSECURE COOKIES
CROSS-FRAME SCRIPTING X-FRAME OPTIONS MISSING
CROSS-DOMAIN.XML ALLOWED DOMAINS
HTML5 ALLOWED DOMAINS
CROSS-ORIGIN POLICY
CONTENT-SNIFFING NOT DISABLED
PASSWORD RESET ACCOUNT ENUM/BRUTE FORCE
HTML FORM ABUSE - LACK OF CSRF PROTECTION
WEAK HSTS AGE (86,000 OR LESS)



LOW SEVERITY


Security best practices without accompanying Proof-of-Concept exploitation
Descriptive error messages (e.g. Stack Traces, application or server errors).
HTTP 404 codes/pages or other HTTP non-200 codes/pages.
Denial of Service Attacks.
Fingerprinting / banner disclosure on common/public services.
Disclosure of known public files or directories, (e.g. robots.txt).
Clickjacking and issues only exploitable through clickjacking.
CSRF on non-sensitive forms.
Logout Cross-Site Request Forgery (logout CSRF).
Presence of application or web browser ‘autocomplete’ or ‘save password’ functionality.
Lack of Secure/HTTPOnly flags on non-sensitive Cookies.
Lack of Security Speedbump when leaving the site.
Weak Captcha / Captcha Bypass
Login or Forgot Password page brute force and account lockout not enforced.
OPTIONS HTTP method enabled
HTTPS Mixed Content Scripts
Known vulnerable libraries without an accompanying exploit
Attacks on Third Party Ad Services
Username / email enumeration
via Login Page error message
via Forgot Password error message
Missing HTTP security headers, specifically (https://www.owasp.org/index.php/List_of_useful_HTTP_headers), e.g.
Strict-Transport-Security
X-Frame-Options
X-XSS-Protection
X-Content-Type-Options
Content-Security-Policy, X-Content-Security-Policy, X-WebKit-CSP
Content-Security-Policy-Report-Only
SSL Issues, e.g.
SSL Attacks such as BEAST, BREACH, Renegotiation attack
SSL Forward secrecy not enabled
SSL weak / insecure cipher suites









